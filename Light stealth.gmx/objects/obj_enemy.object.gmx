<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
mypath = path_add()//This is for custom paths
patrolpath = noone //This is the path for patroling, set it in the creation code
                   //(make a path using the path editor on top, then in the room editor right click on an enemy, click creation code, and type "patrolpath = " and then whatever you named your path)
currentmark = noone;
lastpulse = noone;

hunt = 0 //0 is normal-stationary or patrolling
        // 1 is moving to last pulse location
        // 2 is wandering around to find player
        // 3 is moving back to origin

start = false //This is to run a script on the first frame only

movespeed = 3
aggression = 0.85

startx = x
starty = y

xright = 0
xleft = 0
ytop = 0
ybottom = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop wandering
hunt = 3
if (mp_grid_path(global.grid,mypath,x,y,startx,starty,true)) //global.grid is from player create event
    { //Dont move if a new path was not created
    path_start(mypath,movespeed,path_action_stop,true)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start
if start == false
    {
    if path_exists(patrolpath)
        {
        path_start(patrolpath,movespeed*aggression,path_action_restart,true)
        }
    
    start = true
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When hit by a pulse

//Drop a marker when hit by a pulse
if position_meeting(x,y,obj_pellet) //If pulse hits you
    {
    newpulse = collision_circle(x,y,32,obj_pellet,true,false)
    if (newpulse).pulsenum != lastpulse //If this is a new pulse
        {
        aggression += 0.15
        
        lastpulse = (newpulse).pulsenum
        if instance_exists(currentmark)
            {
            with currentmark
                {
                instance_destroy();
                }
            }
        currentmark = instance_create(x,y,obj_marker) //Create a marker and store its id in currentmark
        (currentmark).papa = id;
        (currentmark).image_angle = direction;
        
        //Move to the player's location
        path_end()
        if (mp_grid_path(global.grid,mypath,x,y,(newpulse).pulsex,(newpulse).pulsey,true)) //global.grid is from player create event
            { //Dont move if a new path was not created
            path_start(mypath,movespeed*aggression,path_action_stop,true)
            hunt = 1
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hunting for player
if hunt == 1
    {
    if path_position == 1
        {
        //If you reached the location of the last pulse
        hunt = 2
        alarm[0] = 180
        }
    }
else if hunt == 2
    { //You leave this when alarm 0 triggers
    if path_position == 1 //If you reached the end of your path, make a new one
        {
        if xright == 0
            { //This sets the farthest the enemy will wander
            xright = x+350 * ((1-aggression)*.75 + 1)
            xleft = x-350 * ((1-aggression)*.75 + 1)
            ytop = y-350 * ((1-aggression)*.75 + 1)
            ybottom = y+350 * ((1-aggression)*.75 + 1)
            }
        
        //Pick a random location within a range to move to
        var i = 0
        do 
            {
            var randx = x + irandom_range(-250,250);
            var randy = y + irandom_range(-250,250);
            i++
            }
        until((xleft &lt; randx &amp;&amp; randx &lt; xright &amp;&amp; ytop &lt; randy &amp;&amp; randy &lt; ybottom) || i&gt;100)
        
        if (mp_grid_path(global.grid,mypath,x,y,randx,randy,true)) //global.grid is from player create event
            { //Dont move if a new path was not created 
            if path_get_length(mypath) &lt; 250
                {
                path_start(mypath,movespeed*aggression,path_action_stop,true)
                }
            }
        }
    }
else if hunt == 3
    {
    if path_position == 1
        {
        //You are back at your origin
        hunt = 0
        
        xright = 0
        xleft = 0
        ytop = 0
        ybottom = 0
        
        if path_exists(patrolpath)
            {
            path_start(patrolpath,movespeed*aggression,path_action_restart,true)
            }
        }
    }

if (hunt == 0 || hunt == 3)
    {
    if aggression &gt;= 1.0025
    aggression -= 0.0025
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
